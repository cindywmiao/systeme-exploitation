#ifndef _FIFO_H_
#define _FIFO_H_
#include "thread.h"

/** 
 * structure that will be stored in thread fifo 
 */
struct element {
  struct thread_t* data;
  struct element* next;
  struct element* prev;
};

/** 
 * fifo structure : pointers on the head and the tail
 */
typedef struct thread_fifo{
  struct element* head;
  struct element* tail;
  unsigned long size;
}fifo;

/* crée un élément à partir d'un thread*/
struct element* create_element( struct thread_t* t);

/* libère un élément */
void free_element(struct element* elm);

/* vérifie si la fifo est vide*/
int fifo_isempty(struct thread_fifo* f);

/* crée une nouvelle fifo */
struct thread_fifo* fifo_create();

/* libère les éléments de la fifo*/
void fifo_free(struct thread_fifo* f) ;
 
/* libère la fifo*/
void fifo_kill(struct thread_fifo* f);

/* retourne le thread qui se trouve à la tête de la fifo */
struct thread_t* fifo_gethead(struct thread_fifo* f);

/* cherche un thread dans la fifo à partir de son identifiant */
struct thread_t* fifo_findthread (int id);

/* ajoute un thread à la fifo */
void fifo_addthread(struct thread_fifo* f, struct thread_t* t) ;

/*supprime un élément de la fifo */
void fifo_remove_element(struct thread_fifo* f, struct element* elm) ;

/* supprime l'élément qui se trouve à la tête de la fifo */
void fifo_remove_head(struct thread_fifo* f) ;

/*supprime un thread de la fifo*/
void fifo_remove_thread (struct thread_fifo* f, int id) ;


#endif /* __FIFO_H__ */
